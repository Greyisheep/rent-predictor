# Tox is a generic virtualenv management and test command line tool. Its goal is to
# standardize testing in Python. We will be using it extensively in this course.

# Using Tox we can (on multiple operating systems):
# + Eliminate PYTHONPATH challenges when running scripts/tests
# + Eliminate virtualenv setup confusion
# + Streamline steps such as model training, model publishing

[pytest]
log_cli_level=WARNING
filterwarnings =
    ignore::DeprecationWarning 			
	ignore::sklearn.exceptions.InconsistentVersionWarning	

; DeprecationWarnings, as well as InconsistentVersionWarnings were filtered till improved for fix

[tox]
min_version = 4
envlist = test_app, checks
skipsdist = True

[testenv]
install_command = pip install {opts} {packages}

[testenv:test_app]
description = Install dependencies and run uvicorn server
deps =
	-rrequirements/test_requirements.txt

setenv =
	PYTHONPATH=.
	PYTHONHASHSEED=0

commands=
	pytest \
	-v \
	{posargs:app/tests/}


[testenv:run]
envdir = {toxworkdir}/test_app
deps =
	{[testenv:test_app]deps}

setenv =
	{[testenv:test_app]setenv}

commands=
	python app/main.py


[testenv:checks]
envdir = {toxworkdir}/checks
deps =
	-rrequirements/typing_requirements.txt
commands =
	flake8 app
	isort app
	; black app
	; {posargs:mypy app}


[flake8]
exclude = .git,__pycache__,__init__.py,.mypy_cache,.pytest_cache,.venv,venv,alembic,.tox
max-line-length = 100